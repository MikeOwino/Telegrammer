// Telegrammer - Telegram Bot Swift SDK.
// This file is autogenerated by API/generate_wrappers.rb script.

public extension Bot {

    /// Parameters container struct for `answerShippingQuery` method
    struct AnswerShippingQueryParams: JSONEncodable {

        /// Unique identifier for the query to be answered
        var shippingQueryId: String

        /// Specify True if delivery to the specified address is possible and False if there are any problems (for example, if delivery to the specified address is not possible)
        var ok: Bool

        /// Required if ok is True. A JSON-serialized array of available shipping options.
        var shippingOptions: [ShippingOption]?

        /// Required if ok is False. Error message in human readable form that explains why it is impossible to complete the order (e.g. "Sorry, delivery to your desired address is unavailable'). Telegram will display this message to the user.
        var errorMessage: String?

        /// Custom keys for coding/decoding `AnswerShippingQueryParams` struct
        enum CodingKeys: String, CodingKey {
            case shippingQueryId = "shipping_query_id"
            case ok = "ok"
            case shippingOptions = "shipping_options"
            case errorMessage = "error_message"
        }

        public init(shippingQueryId: String, ok: Bool, shippingOptions: [ShippingOption]? = nil, errorMessage: String? = nil) {
            self.shippingQueryId = shippingQueryId
            self.ok = ok
            self.shippingOptions = shippingOptions
            self.errorMessage = errorMessage
        }
    }

    /**
     If you sent an invoice requesting a shipping address and the parameter is_flexible was specified, the Bot API will send an Update with a shipping_query field to the bot. Use this method to reply to shipping queries. On success, True is returned.

     SeeAlso Telegram Bot API Reference:
     [AnswerShippingQueryParams](https://core.telegram.org/bots/api#answershippingquery)
     
     - Parameters:
         - params: Parameters container, see `AnswerShippingQueryParams` struct
     - Throws: Throws on errors
     - Returns: Future of `Bool` type
     */
    @discardableResult
    func answerShippingQuery(params: AnswerShippingQueryParams) throws -> Future<Bool> {
        let body = try httpBody(for: params)
        let headers = httpHeaders(for: params)
        return try client
            .request(endpoint: "answerShippingQuery", body: body, headers: headers)
            .flatMapThrowing { (container) -> Bool in
                return try self.processContainer(container)
        }
    }
}

// MARK: Concurrency Support
#if compiler(>=5.5)
@available(macOS 12.0, iOS 15.0, watchOS 8.0, tvOS 15.0, *)
public extension Bot {

    /**
     If you sent an invoice requesting a shipping address and the parameter is_flexible was specified, the Bot API will send an Update with a shipping_query field to the bot. Use this method to reply to shipping queries. On success, True is returned.

     SeeAlso Telegram Bot API Reference:
     [AnswerShippingQueryParams](https://core.telegram.org/bots/api#answershippingquery)
     
     - Parameters:
         - params: Parameters container, see `AnswerShippingQueryParams` struct
     - Throws: Throws on errors
     - Returns: Future of `Bool` type
     */
    @discardableResult
    func answerShippingQuery(params: AnswerShippingQueryParams) async throws -> Bool {
        let body = try httpBody(for: params)
        let headers = httpHeaders(for: params)
        return try self.processContainer(try await client.request(endpoint: "answerShippingQuery", body: body, headers: headers))
    }
}
#endif
